% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/submissions.R
\name{etude2_submissions}
\alias{etude2_submissions}
\alias{submissions_logic}
\alias{submissions_ui}
\title{Elements to handle submissions from learnr tutorials for etude2

#' @description
The following are addon element for learnr tutorials that enable the encoding and
hashed learnr solutions and shiny apps reporting using the `apps_state` system.

Note that when including these functions in a learnr Rmd document it is necessary that
the logic functions, `*_logic()`, be included in an R chunk where `context="server"` as
they interact with the underlying Shiny functionality. Conversely, any of the ui functions,
`*_ui()`, must *not* be included in an R chunk with a `context`. Both types of functions
have been written to provide useful feedback if they detect they are in the wrong R chunk
type.

The overall organization of the upper level functions comes from the `{learnrhash}` package. But
the internals are distinct from the system implemented by `{learnrhash}`.}
\usage{
submissions_logic()

submissions_ui()
}
\description{
Elements to handle submissions from learnr tutorials for etude2

#' @description
The following are addon element for learnr tutorials that enable the encoding and
hashed learnr solutions and shiny apps reporting using the `apps_state` system.

Note that when including these functions in a learnr Rmd document it is necessary that
the logic functions, `*_logic()`, be included in an R chunk where `context="server"` as
they interact with the underlying Shiny functionality. Conversely, any of the ui functions,
`*_ui()`, must *not* be included in an R chunk with a `context`. Both types of functions
have been written to provide useful feedback if they detect they are in the wrong R chunk
type.

The overall organization of the upper level functions comes from the `{learnrhash}` package. But
the internals are distinct from the system implemented by `{learnrhash}`.
}
